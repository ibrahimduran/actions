name: Semver
description: Iterates semver for release
outputs:
  version:
    description: "Semver base, eg. 1.2.3"
    value: ${{ steps.extract_version.outputs.version }}
  meta:
    description: "Semver meta, eg. 105-3 ({RUN_ID}-{RUN_ATTEMPT})"
    value: ${{ steps.extract_version.outputs.meta }}
  tag:
    description: "Additional optional tag, eg. main ({BRANCH_NAME})"
    value: ${{ steps.extract_version.outputs.tag }}
runs:
  using: "composite"
  steps:
    - id: extract_version
      shell: bash
      run: |
        if [[ $GITHUB_REF = refs/tags/* ]]; then
          semver="${GITHUB_REF#refs/tags/}"
          semver="${semver#v}"

          output_version="$semver"
          output_meta="${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}"
          output_tag="$output_version"

          echo "Version: $output_version"
          echo "Meta: $output_meta"
          echo "Tag: $output_tag"

          echo "version=$output_version" >> $GITHUB_OUTPUT
          echo "meta=$output_meta" >> $GITHUB_OUTPUT
          echo "tag=$output_tag" >> $GITHUB_OUTPUT

          exit 0
        fi

        if [[ $GITHUB_REF = refs/heads/* ]]; then
          branch="${GITHUB_REF#refs/heads/}"
        else
          echo "Expected branch, got invalid ref."
          exit 1
        fi

        last_tag=$(git describe --abbrev=0 --tags 2> /dev/null || echo "")

        if [ -z "${last_tag}" ]; then
          last_semver="0.0.0"
          rev_count=$(git rev-list HEAD --count)
        else
          last_semver="${last_tag#v}"
          rev_count=$(git rev-list $last_tag..HEAD --count)
        fi

        if [[ $last_semver =~ ^([0-9]+).([0-9]+).([0-9]+)$ ]]; then
          next_patch=$((BASH_REMATCH[3]+1))
          next_semver="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.${next_patch}"
        else
          echo "Latest tag is not semver compatible."
          exit 1
        fi

        if [ "$branch" = "main" ]; then
          output_version="${next_semver}-rc.${rev_count}"
        else
          output_version="${next_semver}-${branch}.${rev_count}"
        fi

        output_tag="$branch"
        output_meta="${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}"

        echo "Version: $output_version"
        echo "Meta: $output_meta"
        echo "Tag: $output_tag"

        echo "version=$output_version" >> $GITHUB_OUTPUT
        echo "meta=$output_meta" >> $GITHUB_OUTPUT
        echo "tag=$output_tag" >> $GITHUB_OUTPUT
